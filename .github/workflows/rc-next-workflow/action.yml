name: "RC Next Workflow"
description: "Triggers rc-next release workflows for platform repositories"
inputs:
  release_version:
    description: "Platform version (x-x-x format)"
    required: true
  github_token:
    description: "GitHub token for authentication"
    required: true
  github_actor:
    description: "GitHub actor/username"
    required: true
  docker_hub_username:
    description: "Docker Hub username"
    required: true
  docker_hub_token:
    description: "Docker Hub token"
    required: true
  helm_username:
    description: "Helm username"
    required: true
  helm_registry:
    description: "Helm registry"
    required: true
  target_repo:
    description: "Optional: Specific repository to deploy (default: all repos)"
    required: false

outputs:
  platform_version:
    description: "Final platform chart version"
    value: ${{ steps.set_output.outputs.platform_version }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Build TypeScript action
      shell: bash
      run: |
        cd ${{ github.action_path }}
        npm install
        npm run build
    
    - name: Set environment variables
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV
        echo "BRANCH_NAME=platform-${{ inputs.release_version }}" >> $GITHUB_ENV
        echo "FILE_LOCATION=${{ github.workspace }}" >> $GITHUB_ENV
        echo "TARGET_REPO=${{ inputs.target_repo }}" >> $GITHUB_ENV
    
    - name: Update chart versions
      shell: bash
      run: ${{ github.action_path }}/scripts/platform-get-versions-from-service.sh "${{ inputs.release_version }}"
    
    - name: Run Helm dependencies
      shell: bash
      run: ${{ github.action_path }}/scripts/helm-deps.sh 1

    - name: Check for changes
      id: check_changes
      shell: bash
      run: ${{ github.action_path }}/scripts/check-changes.sh

    - name: Trigger platform workflows
      shell: bash
      run: node ${{ github.action_path }}/dist/trigger.js

    - name: Set platform version output
      id: set_output
      shell: bash
      run: |
        VERSION="${{ inputs.release_version }}"
        echo "platform_version=$VERSION" >> $GITHUB_OUTPUT
