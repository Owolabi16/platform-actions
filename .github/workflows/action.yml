name: Deploy Charts to environments

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (format: x-x-x)'
        required: true
        type: string
      environment:
        description: 'the environment to deploy to'
        required: true
        type: choice
        options:
          - rc-next
          - staging
          - prod
      target_repo:
        description: 'Optional: Specific repository to deploy (default: all repos)'
        required: false
        type: string

jobs:
  execute-workflow:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Explicitly check if the script exists  
      - name: Verify script existence
        run: |
          if [ -f ./.github/actions/rc-next-workflow/scripts/platform-get-versions-from-service.sh ]; then
            echo "Script exists"
            cat ./.github/actions/rc-next-workflow/scripts/platform-get-versions-from-service.sh
          else
            echo "Script does not exist"
            find ./.github -name "*.sh" -type f
          fi
      
      # Create a modified version of the script with bash
      - name: Create modified script
        run: |
          mkdir -p ./.github/actions/rc-next-workflow/scripts-fixed
          # Copy the original script content to a new file with proper shebang and permissions
          cp ./.github/actions/rc-next-workflow/scripts/platform-get-versions-from-service.sh ./.github/actions/rc-next-workflow/scripts-fixed/
          sed -i '1i #!/bin/bash' ./.github/actions/rc-next-workflow/scripts-fixed/platform-get-versions-from-service.sh
          chmod +x ./.github/actions/rc-next-workflow/scripts-fixed/platform-get-versions-from-service.sh
          
          # Create a JavaScript wrapper to replace the Node.js script that's calling the shell script
          cat > ./.github/actions/rc-next-workflow/src/script-runner.js << 'EOF'
          const { spawnSync } = require('child_process');
          
          // Get arguments from command line
          const args = process.argv.slice(2);
          
          // Construct the path to the shell script
          const scriptPath = '/home/runner/work/platform-actions/platform-actions/.github/actions/rc-next-workflow/scripts-fixed/platform-get-versions-from-service.sh';
          
          console.log(`Running script with args: ${args.join(' ')}`);
          
          // Run the command with the bash shell explicitly
          const result = spawnSync('/bin/bash', [scriptPath, ...args], {
            stdio: 'inherit'
          });
          
          // Exit with the same code as the script
          process.exit(result.status);
          EOF
          
          # Create a temporary driver script that we can call instead of the original script
          cat > ./run-script.sh << 'EOF'
          #!/bin/bash
          # This is the wrapper that will be called instead of the original script
          node /home/runner/work/platform-actions/platform-actions/.github/actions/rc-next-workflow/src/script-runner.js "$@"
          EOF
          chmod +x ./run-script.sh
      
      # Update environment variable to use our script runner instead
      - name: Set environment variables
        run: |
          echo "SCRIPT_RUNNER=/home/runner/work/platform-actions/platform-actions/run-script.sh" >> $GITHUB_ENV 

      - name: Run RC Next Workflow
        if: ${{ inputs.environment == 'rc-next' }}
        id: rc-next-workflow
        uses: ./.github/actions/rc-next-workflow
        with:
          release_version: ${{ inputs.release_version }}
          github_token: ${{ secrets.GHA_BOT_REPO_TOKEN }}
          github_actor: ${{ github.actor }}
          docker_hub_username: occasio
          docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}
          helm_username: ocamachine
          helm_registry: ghcr.io/occasio-technology-solutions
          target_repo: ${{ inputs.target_repo }}
