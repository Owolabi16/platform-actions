name: "Update HelmRelease Version in Flux Repo"
description: "Updates the HelmRelease chart version inside the appropriate environment patches directory"
inputs:
  environment:
    description: "Environment (prod, staging, rc-next) whose patches should be updated"
    required: true
  chart_version:
    description: "New Helm chart version"
    required: true
  branch_prefix:
    description: "Branch prefix for PR"
    required: false
    default: "update-helm"
  github_token:
    description: "GitHub token for authentication"
    required: true
  github_actor:
    description: "GitHub Actor for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker-hub-user }}
        password: ${{ inputs.docker-hub-token }}
      
    - name: Create Directory Structure
      shell: bash
      run: |
        # Create the directory structure
        mkdir -p tenants/${{ inputs.environment }}/patches
        
        # Create a test YAML file
        cat > tenants/${{ inputs.environment }}/patches/test-helmrelease.yaml << EOF
        apiVersion: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        metadata:
          name: test-release
        spec:
          chart:
            spec:
              version: "${{ inputs.chart_version }}"
        EOF
        
        echo "Created test files"
        ls -la tenants/${{ inputs.environment }}/patches/

    - name: Create Branch and PR
      shell: bash
      run: |
        # Set branch name
        BRANCH_NAME="${{ inputs.branch_prefix }}-${{ github.run_id }}"
        echo "Using branch name: $BRANCH_NAME"
        
        # Get default branch
        DEFAULT_BRANCH=$(curl -s -H "Authorization: token ${{ inputs.github_token }}" \
          "https://api.github.com/repos/${{ github.repository }}" | jq -r '.default_branch')
        echo "Default branch: $DEFAULT_BRANCH"
        
        # Get latest commit SHA from default branch
        SHA=$(curl -s -H "Authorization: token ${{ inputs.github_token }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/$DEFAULT_BRANCH" | jq -r '.object.sha')
        echo "Latest commit SHA: $SHA"
        
        # Create a new branch reference
        curl -s -X POST \
          -H "Authorization: token ${{ inputs.github_token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "{\"ref\":\"refs/heads/$BRANCH_NAME\",\"sha\":\"$SHA\"}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs"