name: "Update HelmRelease Version in Flux Repo"
description: "Updates the HelmRelease chart version inside the appropriate environment patches directory"
inputs:
  environment:
    description: "Environment (prod, staging, rc-next) whose patches should be updated"
    required: true
  chart_version:
    description: "New Helm chart version"
    required: true
  branch_prefix:
    description: "Branch prefix for PR"
    required: false
    default: "update-helm"
  github_token:
    description: "GitHub token for authentication"
    required: true
  github_actor:
    description: "GitHub Actor for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Flux repo
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github_token }}
        path: flux

    - name: Setup Git credentials
      shell: bash
      run: |
        # Configure Git to use the token for authentication
        git config --global credential.helper store
        echo "https://${{ inputs.github_token }}@github.com" > ~/.git-credentials
        git config --global user.name "${{ inputs.github_actor }}"
        git config --global user.email "${{ inputs.github_actor }}@users.noreply.github.com"

    - name: Update YAML files in the specified environment
      shell: bash
      run: |
        # Check if directory exists
        if [ ! -d "flux/tenants/${{ inputs.environment }}/patches" ]; then
          echo "Error: Directory flux/tenants/${{ inputs.environment }}/patches does not exist"
          ls -la flux/tenants || echo "No tenants directory"
          exit 1
        fi
        
        # Loop through all YAML files in the patches directory
        cd flux/tenants/${{ inputs.environment }}/patches
        for file in *.yaml; do
          if [ -f "$file" ]; then
            echo "Updating $file with new chart version: ${{ inputs.chart_version }}"
            yq e '.spec.chart.spec.version = "${{ inputs.chart_version }}"' -i "$file"
          else
            echo "No YAML files found in patches directory"
            ls -la
          fi
        done

    - name: Commit and push tenant changes
      shell: bash
      run: |
        cd flux
        BRANCH_NAME="${{ inputs.branch_prefix }}-${{ github.run_id }}"
        echo "Using branch: $BRANCH_NAME"
        git checkout -B $BRANCH_NAME
        git add .
        git commit -m "chore: Update Helm chart version to ${{ inputs.chart_version }} for ${{ inputs.environment }} environment"
        # Use token explicitly in the Git push command
        git push "https://${{ inputs.github_token }}@github.com/${{ github.repository }}" $BRANCH_NAME

    - name: Create Pull Request
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}  # Use GH_TOKEN for gh CLI
      run: |
        cd flux
        default_branch=$(gh repo view --json defaultBranchRef -q '.defaultBranchRef.name')
        gh pr create \
          --title "Update Helm chart version to ${{ inputs.chart_version }} for ${{ inputs.environment }}" \
          --body "Automated deployment ${{ inputs.environment }} environment" \
          --base $default_branch \
          --head $BRANCH_NAME \
          --reviewer ${{ inputs.github_actor }}